[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = auto
[gc]
	auto = 1
[merge]
	summary = true
[alias]
	co = checkout
	ci = commit -v
	st = status
	cp = cherry-pick -x
	rb = rebase
  b = for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' --color=always --count=20
  br = for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' --color=always --count=20
	r = remote -v
	t = tag -l
	put = push origin HEAD
	unstage = reset HEAD
	uncommit = reset --soft HEAD^
	recommit = commit -C head --amend
	d = diff
	c = commit -v
	s = status
	dc = diff --cached
	ar = add -A
	lg = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %s %C(bold)- %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
	lall = log --graph -all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %s %C(bold)- %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative -10
	l = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %s %C(bold)- %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
  tidy = "!f() { git branch --merged | grep -v \"\\*\" | grep -v master | grep -v dev | xargs -n 1 git branch -d; git remote prune origin; }; f"
  la = !git config -l | grep alias | cut -c 7-
  changes = log --all --first-parent --remotes --reflog --author-date-order
	merge-commits = "!funct() { git log --merges --reverse --oneline --ancestry-path $1..origin | grep \"Merge pull request\";  }; funct"
	pr-number = "!funct() { git merge-commits $1 | head -n1 | sed -n \"s/^.*Merge pull request #\\\\s*\\\\([0-9]*\\\\).*$/\\\\1/p\"; }; funct"
	web-url = "!funct() { git config remote.origin.url | sed -e\"s/git@/https:\\/\\//\" -e\"s/\\.git$//\" | sed -E \"s/(\\/\\/[^:]*):/\\1\\//\"; }; funct"
	pr = "!funct() { open \"`git web-url`/pull/`git pr-number $1`\" ;}; funct"
[push]
	default = current
  autoSetupRemote = true
[user]
	name = Gary Johnson
	email = gary.johnson@leasequery.com
[core]
	editor = vim
	excludesfile = /Users/garyjohnson/.gitignore
	autocrlf = input
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[credential]
	helper = osxkeychain
[pull]
	rebase = true
