[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = auto
[gc]
	auto = 1
[merge]
	summary = true
[alias]
	co = checkout
	ci = commit -v
	st = status
	cp = cherry-pick -x
	rb = rebase
	pr = pull --rebase
	br = branch
	b = branch -v
	r = remote -v
	t = tag -l
	put = push origin HEAD
	unstage = reset HEAD
	uncommit = reset --soft HEAD^
	recommit = commit -C head --amend
	d = diff
	c = commit -v
	s = status
	dc = diff --cached
	pr = pull --rebase
	ar = add -A
	lg = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %s %C(bold)- %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
	l = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %s %C(bold)- %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative -10
  tidy=!f() {           local branch=${1-master};           echo Pruning branches that are already merged into $branch...;           git remote prune origin && git branch --merged $branch | grep --color=auto --exclude-dir={.bzr,.cvs,.git,.hg,.svn} -v  $branch | xargs -n 1 git branch -d;           }; f
  la=!git config -l | grep alias | cut -c 7-
[push]
	default = simple
[user]
	name = Gary Johnson
	email = gary@gjtt.com
[core]
	editor = vim
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
